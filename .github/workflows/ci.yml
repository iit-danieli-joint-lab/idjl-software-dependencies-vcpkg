name: CI

on: [push, pull_request, release]

jobs:
  build-base:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
  
    # Workaround for https://github.com/actions/virtual-environments/issues/10
    - name: Avoid to use GitHub Actions-installed boost
      shell: bash
      run: |
        echo "::set-env name=BOOST_ROOT::"
    
    - name: Check free space 
      shell: bash 
      run: |
        df -h
    
    - name: Download custom vcpkg and additional ports 
      shell: bash
      run: |
        mkdir C:/idjl
        git clone -b 2020.01 https://github.com/microsoft/vcpkg  C:/idjl/vcpkg
        C:/idjl/vcpkg/bootstrap-vcpkg.sh
        git clone -b v0.1.0 https://github.com/robotology-dependencies/robotology-vcpkg-binary-ports C:/robotology-vcpkg-binary-ports
    - name: Install vcpkg ports
      shell: bash
      run: |
        # Install direct dependencies of idjl-software, iDynTree and YARP and some ports with optional features that are necessary later to avoid to rebuilt them later
        C:/idjl/vcpkg/vcpkg.exe --overlay-ports=C:/robotology-vcpkg-binary-ports install --triplet x64-windows curl[core,non-http,ssl,winssl] harfbuzz[core,ucdn] freetype[bzip2,core,png] libpq[core,openssl,zlib] libzip[bzip2,core,openssl] eigen3 libxml2 matio ensenso-binary ipopt-binary protobuf asio ace pcl sqlite3[core,tool]    
        
    # Remove temporary files https://github.com/Microsoft/vcpkg/blob/master/docs/about/faq.md#how-can-i-remove-temporary-files
    # For some reason doing using git bash to do rm -rf fails for icu's port buildtrees, probably for the use of msys2 
    # See https://github.com/microsoft/vcpkg/issues/10365  
    - name: Cleanup vcpkg temporary directories
      shell: cmd 
      run: |
        RMDIR /Q/S C:\idjl\vcpkg\buildtrees
        RMDIR /Q/S C:\idjl\vcpkg\packages
        RMDIR /Q/S C:\idjl\vcpkg\downloads
        
    - uses: actions/upload-artifact@v1
      with:
        name: vcpkg-idjl-base
        path: C:/idjl/vcpkg
        
    - uses: actions/upload-artifact@v1
      with:
        name: robotology-vcpkg-binary-ports
        path: C:/robotology-vcpkg-binary-ports
        
    - name: Prepare release file
      if: github.event_name == 'release'
      shell: cmd 
      run: |
        7z a vcpkg-idjl-base.zip C:\idjl
        
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: 'vcpkg-idjl-base.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  build-step-two:
    runs-on: windows-latest
    needs: build-base

    steps:
    - uses: actions/checkout@v1

    # Workaround for https://github.com/actions/virtual-environments/issues/10
    - name: Avoid to use GitHub Actions-installed boost
      shell: bash
      run: |
        echo "::set-env name=BOOST_ROOT::"
    
    - uses: actions/download-artifact@v1
      with:
        name: vcpkg-idjl-base
        path: C:/idjl/vcpkg

    - uses: actions/download-artifact@v1
      with:
        name: robotology-vcpkg-binary-ports
        path: C:/robotology-vcpkg-binary-ports
    
    - name: Check free space 
      shell: bash 
      run: |
        df -h
    
    - name: Install vcpkg ports
      shell: bash
      run: |
        # Install dependencies for gazebo11 and related ignition dependencies (listed in https://bitbucket.org/osrf/gazebodistro/src/default/gazebo11.yaml)         
        C:/idjl/vcpkg/vcpkg.exe --overlay-ports=C:/robotology-vcpkg-binary-ports install --triplet x64-windows boost-asio boost-any boost-date-time boost-filesystem boost-format boost-interprocess boost-iostreams boost-program-options boost-property-tree boost-regex boost-smart-ptr boost-system boost-thread boost-variant boost-uuid bullet3 cppzmq curl dlfcn-win32 freeimage libyaml libzip jsoncpp ogre protobuf qt5-base qwt sqlite3[core,tool] tbb tinyxml tinyxml2 urdfdom zeromq
        
    # Remove temporary files https://github.com/Microsoft/vcpkg/blob/master/docs/about/faq.md#how-can-i-remove-temporary-files
    # For some reason doing using git bash to do rm -rf fails for icu's port buildtrees, probably for the use of msys2 
    # See https://github.com/microsoft/vcpkg/issues/10365  
    - name: Cleanup vcpkg temporary directories
      shell: cmd 
      run: |
        RMDIR /Q/S C:\idjl\vcpkg\buildtrees
        RMDIR /Q/S C:\idjl\vcpkg\packages
        RMDIR /Q/S C:\idjl\vcpkg\downloads
        
    - uses: actions/upload-artifact@v1
      with:
        name: vcpkg-idjl-step-two
        path: C:/idjl/vcpkg
        
    - name: Prepare release file
      if: github.event_name == 'release'
      shell: cmd 
      run: |
        7z a vcpkg-idjl-step-two.zip C:\idjl
        
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: 'vcpkg-idjl-step-two.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  build-final:
    runs-on: windows-latest
    needs: build-step-two

    steps:
    - uses: actions/checkout@v1
  
    # Workaround for https://github.com/actions/virtual-environments/issues/10
    - name: Avoid to use GitHub Actions-installed boost
      shell: bash
      run: |
        echo "::set-env name=BOOST_ROOT::"
    
    - uses: actions/download-artifact@v1
      with:
        name: vcpkg-idjl-step-two
        path: C:/idjl/vcpkg

    - uses: actions/download-artifact@v1
      with:
        name: robotology-vcpkg-binary-ports
        path: C:/robotology-vcpkg-binary-ports
    
    - name: Check free space 
      shell: bash 
      run: |
        df -h
        
    - name: Install required python-based tools
      shell: bash
      run: |
        pip install vcstool colcon-common-extensions
    
    # Based on https://colcon.readthedocs.io/en/released/user/quick-start.html#build-gazebo-and-the-ignition-packages
    - name: Download Gazebo and related libraries
      shell: bash
      run: |
        mkdir C:/idjl/gazebo
        cd C:/idjl/gazebo
        mkdir src
        vcs import src < ${GITHUB_WORKSPACE}/gazebo-repos.yaml
        
    - name: Build Gazebo and related libraries
      shell: bash
      run: |
        cd C:/idjl/gazebo
        colcon build --cmake-args -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=C:/idjl/vcpkg/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING:BOOL=OFF
        
    # Remove temporary files
    - name: Cleanup vcpkg temporary directories
      shell: cmd 
      run: |
        RMDIR /Q/S C:\idjl\gazebo\build
        RMDIR /Q/S C:\idjl\gazebo\src
        
    - uses: actions/upload-artifact@v1
      with:
        name: vcpkg-idjl-final
        path: C:/idjl
        
    - name: Prepare release file
      if: github.event_name == 'release'
      shell: cmd 
      run: |
        7z a vcpkg-idjl-final.zip C:\idjl
        
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: 'vcpkg-idjl-final.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
